- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    dotfiles_dir: "{{ (playbook_dir, '..') | path_join | normpath }}"
  tasks:
    - name: create user
      become: true
      user:
        name: joao
        shell: /bin/zsh
        append: true
        groups:
          - docker
        state: present
      register: user

    - name: create symbolic links
      file:
        src: "{{ (dotfiles_dir, item.src) | path_join }}"
        dest: "{{ item.dest }}"
        force: yes
        state: link
      loop:
        - { src: "zsh/.zshrc",               dest: "{{ user.home }}/.zshrc" }
        - { src: "zsh/.zshenv",              dest: "{{ user.home }}/.zshenv" }
        - { src: "alacritty/alacritty.toml", dest: "{{ user.home }}/.alacritty.toml" }
        - { src: "ssh/config",               dest: "{{ user.home }}/.ssh/config" }

    - name: tasks checks
      block:
        - name: check if cargo is installed
          shell: command -v cargo
          register: cargo_exists
          changed_when: false
          ignore_errors: yes

        - name: query rustup toolchain
          shell: rustup default
          register: current_rustup_toolchain
          when: cargo_exists
          changed_when: false
            
        - name: check if zsh-syntax-highlighting is installed
          stat:
            path: "{{ user.home }}/.zsh/zsh-syntax-highlighting"
          register: zsh_syntax_highlighting

        - name: check if zsh-autosuggestions is installed
          stat:
            path: "{{ user.home }}/.zsh/zsh-autosuggestions"
          register: zsh_autosuggestions

    - name: install packages
      become: true
      community.general.pacman:
        state: latest
        name:
          - git
          - emacs
          - yay
          - make
          - gcc
          - openssh
          - zsh
          - tree
          - python-pip
          - exa
          - go
          - tldr
          - telegram-desktop
          - discord
          - rustup
          - yarn
          - bat
          - sqlite3
          - docker
          - base-devel

    - name: install aur packages
      shell: /usr/bin/yay --noconfirm --noprogressbar --needed --sync {{ item }}
      register: install_aur_packages
      changed_when: "'skipping' not in install_aur_packages.stdout"
      loop:
        - visual-studio-code-bin

    - name: sets up docker daemon 
      block:
        - name: check if docker is installed
          shell: command -v docker
          register: docker_exists
          changed_when: false
          ignore_errors: yes

        - name: enables and starts docker daemon
          become: true
          when: docker_exists
          systemd_service:
            enabled: true
            name: docker
            state: started

    - name: setup zsh
      block:
        - name: create .zsh directory
          file:
            path: "{{ user.home }}/.zsh"
            state: directory
            mode: '0755'
        - name: install zsh plugins
          block:
            - name: install zsh-syntax-highlighting
              when: not zsh_syntax_highlighting.stat.exists # todo: show as changed
              git:
                repo:  https://github.com/zsh-users/zsh-syntax-highlighting.git
                dest: "{{ user.home }}/.zsh/zsh-syntax-highlighting"
            - name: install zsh-autosuggestions
              when: not zsh_autosuggestions.stat.exists # todo: show as changed
              git:
                repo: https://github.com/zsh-users/zsh-autosuggestions.git
                dest: "{{ user.home }}/.zsh/zsh-autosuggestions"

    - name: set default cargo version
      register: set_cargo_version
      shell: rustup default stable
      when: "cargo_exists and 'stable' not in current_rustup_toolchain.stdout"
      changed_when: "'default toolchain set to' in set_cargo_version.stdout"

    - name: install alacritty
      when: cargo_exists is success
      community.general.cargo:
        name: alacritty
        state: present

